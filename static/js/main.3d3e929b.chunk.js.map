{"version":3,"sources":["World.js","Agent.js","ConwayAgent.js","SimControl.js","CameraControl.js","WorldControl.js","Geometry.js","CanyonCreekWorld.js","GridWorld.js","App.js","serviceWorker.js","index.js"],"names":["World","x","y","z","Agent","context","radio","id","world","size","rotx","roty","rotz","marked","this","THREE","state","createMesh","neighbors","Error","val","i","group","children","length","remove","add","mesh","geometry","SphereGeometry","Math","PI","material","MeshBasicMaterial","color","marker","Mesh","position","copy","Vector3","rotation","Group","time","push","index","indexOf","splice","msg","States","Messages","ConwayAgent","params","alive","debugSim","debugNetwork","lastStateSend","lastCycle","neighborState","Map","setAlive","batch","aliveCount","setHex","stateSendTime","command","console","log","sendMessage","cycleTime","forEach","k","v","random","spontaneousGeneration","resurrectionChance","wrapper","JSON","stringify","set","from","ConwayControl","props","useState","startPattern","setStartPattern","setSize","setCycleTime","setSpontaneousGeneration","setResurrectionChance","style","width","border","padding","onSubmit","evt","preventDefault","paramsChangedAction","height","margin","display","marginTop","label","options","value","onChange","e","target","required","parseInt","type","memo","onClick","playAction","pauseAction","stepAction","resetAction","viewpoint","setViewpoint","viewpointNames","setViewpointNames","navMode","useEffect","vps","viewpoints","name","changeViewpointAction","changeNavModeAction","layout","setLayout","Geometry","points","scale","vertices","faces","Face3","side","DoubleSide","opacity","transparent","min","max","stride","x0","y0","z0","verts","BufferGeometry","setFromPoints","LineBasicMaterial","pointMaterial","PointsMaterial","lineset","Line","pointset","Points","createLand","canvas","makeLabelCanvas","texture","CanvasTexture","minFilter","LinearFilter","wrapS","ClampToEdgeWrapping","wrapT","labelMaterial","SpriteMaterial","map","Sprite","createRiver","baseWidth","ctx","document","createElement","getContext","font","textWidth","measureText","borderSize","textBaseline","textAlign","fillStyle","fillRect","scaleFactor","translate","fillText","CanyonCreekWorld","ret","pattern","agents","start","end","dir","subVectors","normalize","multiplyScalar","shore","rot","vp","lookat","GridWorld","maxWidth","delta","clock","App","debugNeighbors","showNeighborsFor","messages","simPaused","pauseTime","Number","MAX_SAFE_INTEGER","lastLoopTime","Date","getTime","agentParams","worldParams","agentSetup","test","getAgents","px","py","agent","sceneSetup","el","clientWidth","clientHeight","scene","camera","controls","OrbitControls","panSpeed","rotateSpeed","zoomSpeed","FlyControls","MapControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","renderer","antialias","appendChild","domElement","addCustomSceneObjects","n","getMesh","getLandscape","getCameraStart","getViewpoints","calcAgentNeighbors","lights","startAnimationLoop","requestID","window","requestAnimationFrame","now","setState","to","receiveMessage","loop","render","getDelta","update","handleWindowResize","aspect","updateProjectionMatrix","worldSetup","addEventListener","handleChangeViewpoint","removeEventListener","cancelAnimationFrame","dispose","agentIdx","distances","pos","getPosition","dist","distanceToSquared","sort","a","b","len","setNeighbors","getNeighbors","setMarked","milliseconds","date","currentDate","reset","handleSimReset","getMarked","isAlive","key","markNeighbors","row","showAliveCount","handleSimStep","lookAt","mode","ref","onKeyPress","handleKeyPressed","autoFocus","handleSimPause","handleSimPlay","handleChangeNavMode","handleCameraReset","param","handleWorldParamsChanged","handleAgentParamsChanged","Component","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3d3e929b.chunk.js","sourcesContent":["// World Environmental State.  Provides values based on x,y,z location in meters\r\nexport class World {\r\n  constructor() {\r\n\r\n  }\r\n\r\n  getTemperature(x,y,z) {\r\n    return 70;\r\n  }\r\n\r\n  getHumidity(x,y,z) {\r\n    return 70;\r\n  }\r\n\r\n  getLandscape() {\r\n    return null;\r\n  }\r\n\r\n  // Get the camera location to start at\r\n  getCameraStart() {\r\n    return 5;\r\n  }\r\n\r\n  // Get the viewpoints\r\n  getViewpoints() {\r\n    return [];\r\n  }\r\n\r\n  getAgents() {\r\n    return [];\r\n  }\r\n}\r\n\r\nexport default World;","/*\r\n Agent class.  An agent is a separate individual that communicates via messages to other agents.\r\n\r\n It contains a 3D representation implemented via three.js classes\r\n It contains a 2D parameter setup representation implemented via React components\r\n */\r\nexport class Agent {\r\n  marked = false;\r\n\r\n  constructor(context,radio,id,world,size,x,y,z,rotx=0,roty=0,rotz=0) {\r\n    this.THREE = context;\r\n    this.radio = radio;\r\n    this.id = id;\r\n    this.size = size;\r\n    this.world = world;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.rotx = rotx;\r\n    this.roty = roty;\r\n    this.rotz = rotz;\r\n    this.state = {};\r\n\r\n    this.createMesh();\r\n    this.neighbors = [];\r\n\r\n    // Validate to catch runtime bugs\r\n    if (typeof id === \"undefined\") {\r\n      throw new Error(\"Agent.id must be set\");\r\n    }\r\n\r\n    if (typeof radio === 'undefined') {\r\n      throw new Error(\"Agent.radio must be set\");\r\n    }\r\n  }\r\n\r\n  setMarked(val) {\r\n    this.marked = val;\r\n\r\n    for (let i = this.group.children.length - 1; i >= 0; i--) {\r\n      this.group.remove(this.group.children[i]);\r\n    }\r\n\r\n    this.group.add(this.mesh);\r\n\r\n    if (!this.marked) return;\r\n\r\n    let geometry = new this.THREE.SphereGeometry(this.size*1.3, 24, 24,0,Math.PI*2,0,Math.PI/2);\r\n    let material = new this.THREE.MeshBasicMaterial({\r\n      color: 0xFF0000,\r\n    });\r\n    let marker = new this.THREE.Mesh(geometry, material);\r\n    marker.position.copy(new this.THREE.Vector3(this.x,this.y,this.z-this.size));\r\n    marker.rotation.x = this.rotx;\r\n    marker.rotation.y = this.roty;\r\n    marker.rotation.z = this.rotz;\r\n\r\n    this.group.add(marker);\r\n  }\r\n\r\n  getMarked() {\r\n    return this.marked;\r\n  }\r\n\r\n  // State should always be a single map for easier serialization\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  getPosition() {\r\n    return new this.THREE.Vector3(this.x,this.y,this.z);\r\n  }\r\n\r\n  createMesh() {\r\n    this.geometry = new this.THREE.SphereGeometry(this.size, 24, 24,0,Math.PI*2,0,Math.PI/2);\r\n    this.material = new this.THREE.MeshBasicMaterial({\r\n      color: 0xFFFFFF,\r\n    });\r\n    this.mesh = new this.THREE.Mesh(this.geometry, this.material);\r\n    this.mesh.position.copy(new this.THREE.Vector3(this.x,this.y,this.z));\r\n    this.mesh.rotation.x = this.rotx;\r\n    this.mesh.rotation.y = this.roty;\r\n    this.mesh.rotation.z = this.rotz;\r\n\r\n    this.group = new this.THREE.Group();\r\n    this.group.add(this.mesh);\r\n  }\r\n\r\n  // Called only once.  You may modify it but cannot reallocate it.\r\n  getMesh() {\r\n    return this.group;\r\n  }\r\n\r\n  // Simulation methods\r\n  loop(time) {\r\n\r\n  }\r\n\r\n  setNeighbors(val) {\r\n    this.neighbors = [...val];\r\n  }\r\n\r\n  getNeighbors() {\r\n    return this.neighbors;\r\n  }\r\n\r\n  addNeighbor(id) {\r\n    this.neighbors.push(id);\r\n  }\r\n\r\n  removeNeighbor(id) {\r\n    let index = this.neighbors.indexOf(id);\r\n    if (index !== -1) this.neighbors.splice(index,1);\r\n  }\r\n\r\n  receiveMessage(msg) {\r\n  }\r\n\r\n  // simulator.sendMessage(id,msg) - Sends a message to another Agent.  Has a variable delay\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport {Agent} from \"./Agent\";\r\nimport {Button} from \"@rmwc/button\";\r\nimport {TextField} from \"@rmwc/textfield\"\r\nimport {Select} from \"@rmwc/select\"\r\n\r\nimport '@material/textfield/dist/mdc.textfield.css';\r\nimport '@rmwc/select/select.css';\r\nimport '@material/select/dist/mdc.select.css';\r\nimport '@material/floating-label/dist/mdc.floating-label.css';\r\nimport '@material/notched-outline/dist/mdc.notched-outline.css';\r\nimport '@material/line-ripple/dist/mdc.line-ripple.css';\r\nimport '@material/list/dist/mdc.list.css';\r\nimport '@material/menu/dist/mdc.menu.css';\r\nimport '@material/menu-surface/dist/mdc.menu-surface.css';\r\nimport '@material/ripple/dist/mdc.ripple.css';\r\n\r\nconst States = {Idle:\"Idle\",Sensing:\"Sensing\"};\r\nconst Messages = {AreYouAlive:\"AreYouAlive\",ImAlive:\"ImAlive\",ImDead:\"ImDead\",Resurrect:\"Resurrect\"};\r\n\r\n\r\n/*\r\nAgent based on Conway's Game of Life\r\n */\r\nexport class ConwayAgent extends Agent {\r\n  debugSim = false;\r\n  debugNetwork = false;\r\n  lastStateSend = 0;\r\n  lastCycle = 0;\r\n  neighborState = new Map();\r\n\r\n  constructor(context,radio,id,world,size,x,y,z,rotx=0,roty=0,rotz=0,params,alive) {\r\n    super(context,radio,id,world,size,x,y,z,rotx,roty,rotz);\r\n\r\n    this.params = params;\r\n    this.setAlive(alive);\r\n    this.state.lastCycle = 0;\r\n    this.state.state = States.Idle;\r\n    this.state.batch = 0;\r\n    this.state.aliveCount = 0;\r\n  }\r\n\r\n  setAlive(alive) {\r\n    this.state.alive = alive;\r\n\r\n    if (alive) {\r\n//      this.material.color.setHex(0x0000FF);\r\n      this.material.color.setHex(0xFF00FF);\r\n    } else {\r\n      this.material.color.setHex(0x222222);\r\n    }\r\n  }\r\n\r\n  isAlive() {\r\n    return this.state.alive;\r\n  }\r\n\r\n  loop(time) {\r\n    if (time > this.lastStateSend + this.params.stateSendTime) {\r\n      this.lastStateSend = time;\r\n      let msg = {command:this.state.alive ?Messages.ImAlive:Messages.ImDead};\r\n      if (this.debugSim && this.id === 0) {\r\n        console.log(\"Sending state: \" + this.state.alive + \" to neighbors: \" + this.neighbors.length);\r\n        //console.log(JSON.stringify(msg));\r\n      }\r\n      for(let i=0; i < this.neighbors.length; i++) {\r\n        this.radio.sendMessage(this.id, this.neighbors[i], msg);\r\n      }\r\n    }\r\n\r\n    if (this.debugSim && this.id === 0) console.log(\"Check cycle.  time: \" + time + \" next: \" + (this.lastCycle + this.params.cycleTime) + \" lastCycle: \" + this.lastCycle + \" cycleTime: \" + this.params.cycleTime);\r\n    if (time > this.lastCycle + this.params.cycleTime) {\r\n      if (this.debugSim && this.id === 0) {\r\n        console.log(\"Cycle done.  Updating state.  neighbors: \" + this.neighborState.size);\r\n      }\r\n      this.lastCycle = time;\r\n      let aliveCount = 0;\r\n      this.neighborState.forEach( (k,v) => {\r\n        if (this.debugSim && this.id === 0) console.log(k, v);\r\n        if (k) {\r\n          aliveCount++;\r\n        }\r\n      } );\r\n      /*\r\n      for(let [k,v] of this.neighborState) {\r\n        if (v === true) aliveCount++;\r\n        if (this.debugSim && this.id === 0) {\r\n          //console.log(\"Agent: \" + k + \" alive: \" + v);\r\n        }\r\n      }\r\n       */\r\n\r\n      if (this.debugSim && this.id === 0) {\r\n        console.log(\"Agent: \" + this.id + \" aliveN: \" + aliveCount);\r\n      }\r\n      if (this.state.alive === true && (aliveCount === 2 || aliveCount === 3)) {\r\n        this.setAlive(true);\r\n      } else if (this.state.alive === false) {\r\n\r\n        if (aliveCount === 3) {\r\n          this.setAlive(true);\r\n        } else {\r\n          if (Math.random() < this.params.spontaneousGeneration) {\r\n            //console.log(\"Spontanous Generate\");\r\n            this.setAlive(true);\r\n            if (Math.random() < this.params.resurrectionChance) {\r\n              //console.log(\"Awake my brothers!\");\r\n              // Resurrect your neighbors\r\n              for(let i=0; i < this.neighbors.length; i++) {\r\n                let msg = {command:Messages.Resurrect};\r\n                this.radio.sendMessage(this.id, this.neighbors[i], msg);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        this.setAlive(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Receive a network message.  Contains from,to,msg properties\r\n  receiveMessage(wrapper) {\r\n    if (this.debugNetwork && this.id === 0) {\r\n      console.log(\"Agent: \" + this.id + \" recv: \" + JSON.stringify(wrapper));\r\n    }\r\n\r\n    let msg = wrapper.msg;\r\n\r\n    switch(msg.command) {\r\n      case Messages.Resurrect:\r\n        let r = Math.random();\r\n        //console.log(\"Got resurrect.  rolled: \" + r + \" vs: \" + this.params.resurrectionChance);\r\n        if (r < this.params.resurrectionChance) {\r\n          //console.log(\"Jesus!\");\r\n          this.setAlive(true);\r\n        }\r\n        break;\r\n      case Messages.ImAlive:\r\n        this.neighborState.set(wrapper.from,true);\r\n        break;\r\n      case Messages.ImDead:\r\n        this.neighborState.set(wrapper.from,false);\r\n        break;\r\n      default:\r\n        // ignore\r\n        break;\r\n    }\r\n  }\r\n\r\n  /*\r\n    // Simulation methods\r\n    loop(time) {\r\n      if (this.state.state === States.Idle) {\r\n        //if (this.id === 0) console.log(\"time: \" + time + \" next: \" + (this.state.lastCycle + this.params.cycleTime));\r\n        if (time < this.state.lastCycle + this.params.cycleTime) return;\r\n\r\n        if (this.debugSim && this.id == 0) {\r\n          console.log(\"Start Sensing: \" + time);\r\n        }\r\n\r\n        this.state.state = States.Sensing;\r\n        this.state.startedSensing = time;\r\n        this.state.batch = this.state.batch + 1;\r\n        this.state.aliveCount = 0;\r\n\r\n        // Query our neighbors.\r\n        for(let i=0; i < this.neighbors.length; i++) {\r\n          let msg = {command:Messages.AreYouAlive, batch:this.state.batch};\r\n          this.radio.sendMessage(this.id, this.neighbors[i], msg);\r\n        }\r\n      } else if (this.state.state === States.Sensing) {\r\n        if (time > this.state.startedSensing + this.params.cycleTime) {\r\n          if (this.debugSim && this.id == 0) {\r\n            console.log(\"End Sensing: \" + time)\r\n          }\r\n          // We've collected as many answers as we are going to get\r\n          if (this.state.alive === true && (this.state.aliveCount === 2 || this.state.aliveCount === 3)) {\r\n            this.setAlive(true);\r\n          } else if (this.state.alive === false) {\r\n\r\n            if (this.state.aliveCount === 3) {\r\n              this.setAlive(true);\r\n            } else {\r\n              if (Math.random() < this.params.spontaneousGeneration) {\r\n                //console.log(\"Spontanous Generate\");\r\n                this.setAlive(true);\r\n                if (Math.random() < this.params.resurrectionChance) {\r\n                  //console.log(\"Awake my brothers!\");\r\n                  // Resurrect your neighbors\r\n                  for(let i=0; i < this.neighbors.length; i++) {\r\n                    let msg = {command:Messages.Resurrect};\r\n                    this.radio.sendMessage(this.id, this.neighbors[i], msg);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            this.setAlive(false);\r\n          }\r\n\r\n          this.state.state = States.Idle;\r\n          this.state.lastCycle = time;\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Receive a network message.  Contains from,to,msg properties\r\n    receiveMessage(wrapper) {\r\n      if (this.debugNetwork) {\r\n        console.log(\"Agent: \" + this.id + \" recv: \" + JSON.stringify(wrapper));\r\n      }\r\n\r\n      let msg = wrapper.msg;\r\n\r\n      if (msg.command === Messages.Resurrect) {\r\n        let r = Math.random();\r\n        //console.log(\"Got resurrect.  rolled: \" + r + \" vs: \" + this.params.resurrectionChance);\r\n        if (r < this.params.resurrectionChance) {\r\n          //console.log(\"Jesus!\");\r\n          this.setAlive(true);\r\n        }\r\n      }\r\n\r\n      if (this.state.state !== States.Sensing) {\r\n        if (this.debugNetwork) {\r\n          console.log(\"Agent: \" + this.id + \" ignored.  Not Sensing\");\r\n        }\r\n        // ignore\r\n        return;\r\n      }\r\n\r\n      switch(msg.command) {\r\n        case Messages.ImAlive:\r\n          if (msg.batch !== this.state.batch) {\r\n            // ignore old batch answer\r\n            return;\r\n          }\r\n\r\n          this.state.aliveCount++;\r\n          break;\r\n        case Messages.AreYouAlive:\r\n          if (this.state.alive === true) {\r\n            this.radio.sendMessage(this.id, wrapper.from, {command: Messages.ImAlive, batch: msg.batch})\r\n          }\r\n          // Do not send a message if dead to preserve bandwidth\r\n          break;\r\n      }\r\n    }\r\n  */\r\n\r\n  render() {\r\n    return <div><h1>Game of Life</h1></div>\r\n  }\r\n}\r\n\r\nexport function ConwayControl(props) {\r\n  const [startPattern,setStartPattern] = useState(props.startPattern);\r\n  const [size,setSize] = useState(props.size);\r\n  const [cycleTime, setCycleTime] = useState(props.cycleTime);\r\n  const [spontaneousGeneration, setSpontaneousGeneration] = useState(props.spontaneousGeneration);\r\n  const [resurrectionChance,setResurrectionChance] = useState(props.resurrectionChance);\r\n\r\n  const submit = (evt) => {\r\n    if (evt) evt.preventDefault();\r\n\r\n    props.paramsChangedAction({\r\n      startPattern:startPattern,\r\n      size:size,\r\n      cycleTime:cycleTime,\r\n      spontaneousGeneration:spontaneousGeneration,\r\n      resurrectionChance:resurrectionChance\r\n    });\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      width:\"512px\",\r\n      border: \"1px solid black\",\r\n      padding:\"8px\"\r\n    }}>\r\n      <h1>Game of Life - Agent Control</h1>\r\n      <form onSubmit={submit}>\r\n        <Select style={{\r\n          width:\"100%\",\r\n          height:\"56px\",\r\n          margin:\"auto\",\r\n          display:\"block\",\r\n          marginTop:\"24px\",\r\n        }}\r\n          label=\"Start Pattern\" options={[\"critical\",\"toad\",\"beacon\",\"blinker\",\"random\",\"corners\",\"blank\",\"quadpole\",\"pulsar\",\"test\"]} value={startPattern} onChange={e => setStartPattern(e.target.value)} />\r\n        <TextField style={{\r\n          width:\"100%\",\r\n          height:\"56px\",\r\n          margin:\"auto\",\r\n          display:\"block\",\r\n          marginTop:\"24px\",\r\n        }}label=\"Size\" required value={size} onChange={e => setSize(parseInt(e.target.value))} />\r\n        <TextField style={{\r\n          width:\"100%\",\r\n          height:\"56px\",\r\n          margin:\"auto\",\r\n          display:\"block\",\r\n          marginTop:\"24px\",\r\n        }}label=\"CycleTime\" required value={cycleTime} onChange={e => setCycleTime(parseInt(e.target.value))} />\r\n        <TextField style={{\r\n          width:\"100%\",\r\n          height:\"56px\",\r\n          margin:\"auto\",\r\n          display:\"block\",\r\n          marginTop:\"24px\",\r\n        }}label=\"Spontaneous Generation\" required value={spontaneousGeneration} onChange={e => setSpontaneousGeneration(e.target.value)} />\r\n        <TextField style={{\r\n          width:\"100%\",\r\n          height:\"56px\",\r\n          margin:\"auto\",\r\n          display:\"block\",\r\n          marginTop:\"24px\",\r\n        }}label=\"Resurrection Chance\" required value={resurrectionChance} onChange={e => setResurrectionChance(e.target.value)} />\r\n        <Button style={{\r\n          width:\"100%\"\r\n        }} type=\"submit\" label=\"Update\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React, { memo } from \"react\";\r\n\r\nimport { Button } from \"@rmwc/button\"\r\n\r\nimport '@material/button/dist/mdc.button.css';\r\nimport '@material/ripple/dist/mdc.ripple.css';\r\n\r\n/*\r\n Simulation Control Component\r\n\r\n  props:\r\n     resetAction\r\n     pauseAction\r\n     playAction\r\n */\r\nfunction SimControl(props) {\r\n  return (\r\n    <div style={{\r\n      border: \"1px solid black\",\r\n      padding:\"8px\"\r\n    }}>\r\n      <h1>Simulation Control</h1>\r\n      <div style={{width:\"100px\",margin:\"auto\"}}><b>time: {props.time}</b></div>\r\n      <Button label=\"Play\" onClick={props.playAction} />\r\n      <Button label=\"Pause\" onClick={props.pauseAction}/>\r\n      <Button label=\"Step\" onClick={props.stepAction}/>\r\n      <Button label=\"Reset\" onClick={props.resetAction} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(SimControl);\r\n","import React, {memo, useEffect, useState} from \"react\";\r\n\r\nimport {Button} from \"@rmwc/button\"\r\n\r\nimport '@material/button/dist/mdc.button.css';\r\nimport '@material/ripple/dist/mdc.ripple.css';\r\nimport {Select} from \"@rmwc/select\";\r\n\r\n/*\r\n Simulation Control Component\r\n\r\n  props:\r\n     resetAction\r\n     vp\r\n */\r\nfunction CameraControl(props) {\r\n  const [viewpoint, setViewpoint] = useState(\"\");\r\n  const [viewpointNames, setViewpointNames] = useState([]);\r\n  const [navMode, setNavMode] = useState(\"Orbit\");\r\n\r\n  useEffect(\r\n    () => {\r\n      let vps = [];\r\n      for (let i = 0; i < props.viewpoints.length; i++) {\r\n        vps.push(props.viewpoints[i].name);\r\n      }\r\n\r\n      setViewpoint(vps[0]);\r\n      setViewpointNames(vps);\r\n    },\r\n    [props.viewpoints]\r\n  );\r\n\r\n\r\n  function submit(evt) {\r\n    if (evt) evt.preventDefault();\r\n\r\n    for(let i=0; i < props.viewpoints.length; i++) {\r\n      console.log(props.viewpoints[i]);\r\n      if (props.viewpoints[i].name === viewpoint) {\r\n        props.changeViewpointAction(props.viewpoints[i]);\r\n      }\r\n    }\r\n\r\n    props.changeNavModeAction(navMode);\r\n\r\n    return null;\r\n  }\r\n\r\n  /*\r\n\r\n        <Select style={{\r\n          width: \"100%\",\r\n          height: \"56px\",\r\n          margin: \"auto\",\r\n          display: \"block\",\r\n          marginTop: \"24px\",\r\n        }}\r\n                label=\"NavMode\" options={[\"Orbit\",\"Fly\"]} value={navMode}\r\n                onChange={e => setNavMode(e.target.value)}/>\r\n\r\n\r\n   */\r\n  return (\r\n    <div style={{\r\n      border: \"1px solid black\",\r\n      padding: \"8px\"\r\n    }}>\r\n      <h1>Camera Control</h1>\r\n      <form onSubmit={submit}>\r\n        <Select style={{\r\n          width: \"100%\",\r\n          height: \"56px\",\r\n          margin: \"auto\",\r\n          display: \"block\",\r\n          marginTop: \"24px\",\r\n        }}\r\n                label=\"Viewpoint\" options={viewpointNames} value={viewpoint}\r\n                onChange={e => setViewpoint(e.target.value)}/>\r\n          <Button style={{width:\"50%\"}} type=\"submit\" label=\"Update\"/>\r\n          <Button style={{width:\"50%\"}} label=\"Reset\" onClick={props.resetAction}/>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(CameraControl);\r\n","import React, {useState,useEffect,memo} from \"react\";\r\nimport {Select} from \"@rmwc/select\";\r\nimport {TextField} from \"@rmwc/textfield\";\r\nimport {Button} from \"@rmwc/button\";\r\n\r\nfunction WorldControl(props) {\r\n  const [layout,setLayout] = useState(props.layout);\r\n\r\n  const submit = (evt) => {\r\n    if (evt) evt.preventDefault();\r\n\r\n    props.paramsChangedAction({\r\n      layout:layout\r\n    });\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      width:\"512px\",\r\n      border: \"1px solid black\",\r\n      padding:\"8px\"\r\n    }}>\r\n      <h1>World Control</h1>\r\n      <form onSubmit={submit}>\r\n        <Select style={{\r\n          width:\"100%\",\r\n          height:\"56px\",\r\n          margin:\"auto\",\r\n          display:\"block\",\r\n          marginTop:\"24px\",\r\n        }}\r\n                label=\"Layout\" options={[\"grid\",\"critical\",\"forest\"]} value={layout} onChange={e => setLayout(e.target.value)} />\r\n        <Button style={{\r\n          width:\"100%\"\r\n        }} type=\"submit\" label=\"Update\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(WorldControl);","class Geometry {\r\n  // Create a river via shore points\r\n  static createRiver(THREE,points,scale,y) {\r\n    let geometry = new THREE.Geometry();\r\n\r\n    for(let i=0; i < points.length; i++) {\r\n      //console.log(points[i][0] + \" 0 \" + points[i][1]);\r\n      geometry.vertices.push(\r\n        new THREE.Vector3(scale * points[i][0], scale * y, scale * points[i][1]),\r\n      );\r\n    }\r\n\r\n    for(let i=0; i < points.length / 2; i++) {\r\n        //console.log(\"eface: \" + (i*2) + \",\" + ((i*2)+1) + \",\" + ((i*2)+2));\r\n        //console.log(\"oface: \" + (i*2+1) + \",\" + ((i*2)+3) + \",\" + (i*2+2));\r\n\r\n        geometry.faces.push(new THREE.Face3(i*2,(i*2)+1,(i*2)+2));\r\n        geometry.faces.push(new THREE.Face3(i*2+1,i*2+3,i*2+2));\r\n    }\r\n\r\n    //geometry.computeBoundingSphere();\r\n\r\n    let material = new THREE.MeshBasicMaterial({\r\n      color: 0x0077be,\r\n      side: THREE.DoubleSide,\r\n      opacity: 0.5,\r\n      transparent: true\r\n    });\r\n    let mesh = new THREE.Mesh(geometry, material);\r\n\r\n    return mesh;\r\n  }\r\n\r\n  // Create land via shore points.  Forms a fan from the points and origin\r\n  static createLand(THREE,points,scale,min,max,stride,y,x0,y0,z0) {\r\n    let geometry = new THREE.Geometry();\r\n\r\n    geometry.vertices.push(\r\n      new THREE.Vector3(x0 * scale, y0 * scale, z0 * scale),\r\n    );\r\n\r\n    for(let i=min; i <= max; i = i + stride) {\r\n      //console.log(points[i][0] + \" 0 \" + points[i][1]);\r\n      geometry.vertices.push(\r\n        new THREE.Vector3(scale * points[i][0], 0, scale * points[i][1]),\r\n      );\r\n    }\r\n\r\n    const faces = (max - min) / stride;\r\n    //console.log(\"Creating land faces: \" + faces);\r\n    for(let i=0; i < faces; i++) {\r\n      //console.log(\"eface: \" + (i*2) + \",\" + ((i*2)+1) + \",\" + ((i*2)+2));\r\n      //console.log(\"oface: \" + (i*2+1) + \",\" + ((i*2)+3) + \",\" + (i*2+2));\r\n      //console.log(\"face: \" + \"0,\" + \",\" + (i+2) + \",\" + (i+1));\r\n      geometry.faces.push(new THREE.Face3(0,i+2,i+1));\r\n    }\r\n\r\n    let material = new THREE.MeshBasicMaterial({\r\n      color: 0x90ee90,\r\n      side: THREE.DoubleSide\r\n    });\r\n    let mesh = new THREE.Mesh(geometry, material);\r\n\r\n    return mesh;\r\n  }\r\n\r\n  // Create land via shore points.  Forms a fan from the points and origin\r\n  static createLandDebug(THREE,points,scale,min,max,stride,y,x0,y0,z0) {\r\n    let verts = [];\r\n\r\n    verts.push(\r\n      new THREE.Vector3(x0 * scale, y0 * scale, z0 * scale),\r\n    );\r\n\r\n    for(let i=min; i <= max; i = i + stride) {\r\n      //console.log(points[i][0] + \" 0 \" + points[i][1]);\r\n      verts.push(\r\n        new THREE.Vector3(scale * points[i][0], 0, scale * points[i][1]),\r\n      );\r\n    }\r\n    verts.push(\r\n      new THREE.Vector3(x0 * scale, y0 * scale, z0 * scale),\r\n    );\r\n\r\n    console.log(\"verts: \" + verts.length);\r\n    var geometry = new THREE.BufferGeometry().setFromPoints( verts );\r\n    var material = new THREE.LineBasicMaterial( { color: 0x00FF00 } );\r\n\r\n    let pointMaterial = new THREE.PointsMaterial({\r\n      size: 1,\r\n      color: 0xFF0000\r\n    });\r\n\r\n    var lineset = new THREE.Line( geometry, material );\r\n    var pointset = new THREE.Points(geometry, pointMaterial);\r\n\r\n    let group = new THREE.Group();\r\n    group.add(lineset);\r\n    group.add(pointset);\r\n    group.add(Geometry.createLand(THREE,points,scale,min,max,stride,y,x0,y0,z0));\r\n\r\n    // Create debug labels\r\n    for(let i=0; i < verts.length; i++) {\r\n      const canvas = Geometry.makeLabelCanvas(128, 64, i);\r\n      const texture = new THREE.CanvasTexture(canvas);\r\n      // because our canvas is likely not a power of 2\r\n      // in both dimensions set the filtering appropriately.\r\n      texture.minFilter = THREE.LinearFilter;\r\n      texture.wrapS = THREE.ClampToEdgeWrapping;\r\n      texture.wrapT = THREE.ClampToEdgeWrapping;\r\n\r\n      const labelMaterial = new THREE.SpriteMaterial({\r\n        map: texture,\r\n        transparent: true,\r\n      });\r\n\r\n      const label = new THREE.Sprite(labelMaterial);\r\n      label.position.x = verts[i].x;\r\n      label.position.y = (y + 0.01) * scale;\r\n      label.position.z = verts[i].z;\r\n\r\n      // if units are meters then 0.01 here makes size\r\n      // of the label into centimeters.\r\n      const labelBaseScale = 0.001;\r\n      label.scale.x = 1060 * labelBaseScale;  // TODO: Do not hardcode these\r\n      label.scale.y = 512 * labelBaseScale;\r\n\r\n      group.add(label);\r\n    }\r\n\r\n    return group;\r\n\r\n  }\r\n\r\n  static createRiverDebug(THREE,points,scale,y) {\r\n    let verts = [];\r\n    for(let i=0; i < points.length; i++) {\r\n      //console.log(points[i][0] + \" 0 \" + points[i][1]);\r\n      verts.push(\r\n        new THREE.Vector3(scale*points[i][0], scale * y, scale*points[i][1]),\r\n      );\r\n    }\r\n\r\n    var geometry = new THREE.BufferGeometry().setFromPoints( verts );\r\n    var material = new THREE.LineBasicMaterial( { color: 0x00FF00 } );\r\n\r\n    let pointMaterial = new THREE.PointsMaterial({\r\n      size: 1,\r\n      color: 0xFF0000\r\n    });\r\n\r\n    var lineset = new THREE.Line( geometry, material );\r\n    var pointset = new THREE.Points(geometry, pointMaterial);\r\n\r\n    let group = new THREE.Group();\r\n    group.add(lineset);\r\n    group.add(pointset);\r\n    group.add(Geometry.createRiver(THREE,points,scale,y));\r\n\r\n    // Create debug labels\r\n    for(let i=0; i < points.length; i++) {\r\n      const canvas = Geometry.makeLabelCanvas(128, 64, i);\r\n      const texture = new THREE.CanvasTexture(canvas);\r\n      // because our canvas is likely not a power of 2\r\n      // in both dimensions set the filtering appropriately.\r\n      texture.minFilter = THREE.LinearFilter;\r\n      texture.wrapS = THREE.ClampToEdgeWrapping;\r\n      texture.wrapT = THREE.ClampToEdgeWrapping;\r\n\r\n      const labelMaterial = new THREE.SpriteMaterial({\r\n        map: texture,\r\n        transparent: true,\r\n      });\r\n\r\n      const label = new THREE.Sprite(labelMaterial);\r\n      label.position.x = scale * points[i][0];\r\n      label.position.y = (y + 0.01) * scale;\r\n      label.position.z = scale * points[i][1];\r\n\r\n      // if units are meters then 0.01 here makes size\r\n      // of the label into centimeters.\r\n      const labelBaseScale = 0.001;\r\n      label.scale.x = 1060 * labelBaseScale;  // TODO: Do not hardcode these\r\n      label.scale.y = 512 * labelBaseScale;\r\n\r\n      group.add(label);\r\n    }\r\n\r\n    return group;\r\n  }\r\n\r\n  static createBox(THREE,points) {\r\n    let geometry = new THREE.Geometry();\r\n\r\n    geometry.vertices.push(\r\n      new THREE.Vector3(-1, -1,  1),  // 0\r\n      new THREE.Vector3( 1, -1,  1),  // 1\r\n      new THREE.Vector3(-1,  1,  1),  // 2\r\n      new THREE.Vector3( 1,  1,  1),  // 3\r\n      new THREE.Vector3(-1, -1, -1),  // 4\r\n      new THREE.Vector3( 1, -1, -1),  // 5\r\n      new THREE.Vector3(-1,  1, -1),  // 6\r\n      new THREE.Vector3( 1,  1, -1),  // 7\r\n    );\r\n\r\n    geometry.faces.push(\r\n      // front\r\n      new THREE.Face3(0, 3, 2),\r\n      new THREE.Face3(0, 1, 3),\r\n      // right\r\n      new THREE.Face3(1, 7, 3),\r\n      new THREE.Face3(1, 5, 7),\r\n      // back\r\n      new THREE.Face3(5, 6, 7),\r\n      new THREE.Face3(5, 4, 6),\r\n      // left\r\n      new THREE.Face3(4, 2, 6),\r\n      new THREE.Face3(4, 0, 2),\r\n      // top\r\n      new THREE.Face3(2, 7, 6),\r\n      new THREE.Face3(2, 3, 7),\r\n      // bottom\r\n      new THREE.Face3(4, 1, 0),\r\n      new THREE.Face3(4, 5, 1),\r\n    );\r\n    //geometry.computeBoundingSphere();\r\n\r\n    let material = new THREE.MeshBasicMaterial({\r\n      color: 0xFFFFFF,\r\n      side: THREE.DoubleSide\r\n    });\r\n    let mesh = new THREE.Mesh(geometry, material);\r\n\r\n    return mesh;\r\n  }\r\n\r\n  static makeLabelCanvas(baseWidth, size, name) {\r\n    const borderSize = 2;\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    const font =  `${size}px bold sans-serif`;\r\n    ctx.font = font;\r\n    // measure how long the name will be\r\n    const textWidth = ctx.measureText(name).width;\r\n\r\n    const doubleBorderSize = borderSize * 2;\r\n    const width = baseWidth + doubleBorderSize;\r\n    const height = size + doubleBorderSize;\r\n    ctx.canvas.width = width;\r\n    ctx.canvas.height = height;\r\n\r\n    // need to set font again after resizing canvas\r\n    ctx.font = font;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.textAlign = 'center';\r\n\r\n    ctx.fillStyle = 'blue';\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // scale to fit but don't stretch\r\n    const scaleFactor = Math.min(1, baseWidth / textWidth);\r\n    ctx.translate(width / 2, height / 2);\r\n    ctx.scale(scaleFactor, 1);\r\n    ctx.fillStyle = 'white';\r\n    ctx.fillText(name, 0, 0);\r\n\r\n    return ctx.canvas;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Geometry","import Geometry from \"./Geometry\";\r\nimport World from \"./World\";\r\nimport {ConwayAgent} from \"./ConwayAgent\";\r\nimport * as THREE from \"three\";\r\n\r\n// Canyon Creek Area at Critical\r\n// Modeled on grid coordinates from map.  Each grid is 76 meters, starting at B1 at 0,0\r\nclass CanyonCreekWorld extends World {\r\n  scale = 76;\r\n  points = [\r\n    [.75,3.5],     // 0\r\n    [1,3.5],       // 1\r\n    [.75,3.25],    // 2\r\n    [1,3.25],      // 3\r\n    [.95,2.85],    // 4\r\n    [1.25,3],      // 5\r\n    [1.25,2.6],    // 6\r\n    [1.75,2.6],    // 7\r\n    [1.5,2.25],    // 8\r\n    [1.85,2.25],   // 9\r\n    [1.75,2],      // 10\r\n    [2,2],         // 11\r\n    [2,1.75],      // 12\r\n    [2.25,1.75],   // 13\r\n    [2.25,1.5],    // 14\r\n    [2.4,1.6],     // 15\r\n    [2.6,1.1],     // 16\r\n    [2.9,1.0],     // 17\r\n    [2.75,0.75],   // 18\r\n    [3.0,0.75],    // 19\r\n    [3.0, 0.5],    // 20\r\n    [3.25,0.75],   // 21\r\n    [3.25,0.3],    // 22\r\n    [3.5,0.75],    // 23\r\n    [3.5,0.25],    // 24\r\n    [3.75,0.75],   // 25\r\n    [3.75,0.25],   // 26\r\n    [4.0,0.75],    // 27\r\n    [4.5,0.75],    // 28\r\n    [4.5,1.0],     // 29\r\n    [4.75,0.75],   // 30\r\n    [4.75,1.25],   // 31\r\n    [4.75,1.25],   // 31\r\n  ];\r\n\r\n\r\n  getCameraStart() {\r\n    return 50;\r\n  }\r\n\r\n  getLandscape(THREE) {\r\n    const points = this.points;\r\n    const scale = this.scale;\r\n    \r\n    for(let i=0; i < points.length;i++) {\r\n      points[i] = [points[i][0], points[i][1]];\r\n    }\r\n\r\n    let ret = new THREE.Group();\r\n    ret.add(Geometry.createRiver(THREE,points,scale,-1 / scale));\r\n    ret.add(Geometry.createLand(THREE,points,scale,1,points.length-2,2,0 / scale,3.5,0,5));\r\n    ret.add(Geometry.createLand(THREE,points,scale,0,20,2,0 / scale,-5,0,-7));\r\n    ret.add(Geometry.createLand(THREE,points,scale,20,30,2,0 / scale,5,0,-7));\r\n\r\n    return ret;\r\n  }\r\n\r\n  getAgents(THREE,pattern,params,radio) {\r\n    const points = this.points;\r\n    const scale = this.scale;\r\n    let id = 0;\r\n    const chance = 0.4;\r\n\r\n    let agents = [];\r\n    const water = -0.8;\r\n    const min = 7;\r\n    const max = 14;\r\n    const waterSize = 0.4;\r\n    const landSize = 0.2;\r\n\r\n    // water points.  interpolate 3 points along each diagonal\r\n\r\n    for(let i=min; i < max; i++) {\r\n      const start = points[i];\r\n      const end = points[i+1];\r\n      const dir = new THREE.Vector3();\r\n\r\n      dir.subVectors(new THREE.Vector3(end[0],0,end[1]),new THREE.Vector3(start[0],0,start[1]));\r\n      dir.normalize();\r\n\r\n      dir.multiplyScalar(0.25);\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,waterSize,start[0] * scale + dir.x * scale,water,start[1] * scale + dir.z * scale,0,0,0,params,Math.random() < chance));\r\n\r\n      dir.multiplyScalar(0.5);\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,waterSize,start[0] * scale + dir.x * scale,water,start[1] * scale + dir.z * scale,0,0,0,params,Math.random() < chance));\r\n\r\n      dir.multiplyScalar(0.75);\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,waterSize,start[0] * scale + dir.x * scale,water,start[1] * scale + dir.z * scale,0,0,0,params,Math.random() < chance));\r\n    }\r\n\r\n    // land points.  put a tree on each point and each mid point\r\n\r\n    for(let i=min; i < max - 1; i++) {\r\n      const start = points[i];\r\n      const end = points[i + 2];\r\n      const shore = new THREE.Vector3();\r\n      const dir = new THREE.Vector3();\r\n      let rot = 0;\r\n\r\n      if (i % 2 === 0) {\r\n        rot = -Math.PI / 2;\r\n      } else {\r\n        rot = Math.PI / 2;\r\n      }\r\n\r\n      shore.subVectors(new THREE.Vector3(points[i+1][0], 0, points[i+1][1]), new THREE.Vector3(start[0], 0, start[1]));\r\n      shore.normalize();\r\n\r\n      console.log(\"shore: \" + shore.x + \" \" + shore.y + \" \" + shore.z);\r\n      dir.subVectors(new THREE.Vector3(end[0], 0, end[1]), new THREE.Vector3(start[0], 0, start[1]));\r\n      dir.normalize();\r\n\r\n      shore.multiplyScalar(-0.05);  // Back off some into the forest\r\n      console.log(\"water.  pos: \" + (start[0] * scale + shore.x * scale) + \" \" + water + \" \" + (start[1] * scale + shore.z * scale));\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + shore.x * scale,0,start[1] * scale + shore.y * scale,0,0,rot,params,Math.random() < chance));\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + shore.x * scale,1,start[1] * scale + shore.y * scale,0,0,rot,params,Math.random() < chance));\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + shore.x * scale,2,start[1] * scale + shore.y * scale,0,0,rot,params,Math.random() < chance));\r\n\r\n      dir.multiplyScalar(0.25);\r\n\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + dir.x * scale + shore.x * scale,0,start[1] * scale + dir.z * scale + shore.z * scale,0,0,rot,params,Math.random() < chance));\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + dir.x * scale + shore.x * scale,1,start[1] * scale + dir.z * scale + shore.z * scale,0,0,rot,params,Math.random() < chance));\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + dir.x * scale + shore.x * scale,2,start[1] * scale + dir.z * scale + shore.z * scale,0,0,rot,params,Math.random() < chance));\r\n\r\n      dir.multiplyScalar(0.5);\r\n\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + dir.x * scale + shore.x * scale,0,start[1] * scale + dir.z * scale + shore.z * scale,0,0,rot,params,Math.random() < chance));\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + dir.x * scale + shore.x * scale,1,start[1] * scale + dir.z * scale + shore.z * scale,0,0,rot,params,Math.random() < chance));\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + dir.x * scale + shore.x * scale,2,start[1] * scale + dir.z * scale + shore.z * scale,0,0,rot,params,Math.random() < chance));\r\n\r\n      dir.multiplyScalar(0.75);\r\n\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + dir.x * scale + shore.x * scale,0,start[1] * scale + dir.z * scale + shore.z * scale,0,0,rot,params,Math.random() < chance));\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + dir.x * scale + shore.x * scale,1,start[1] * scale + dir.z * scale + shore.z * scale,0,0,rot,params,Math.random() < chance));\r\n      agents.push(new ConwayAgent(THREE,radio,id++,this,landSize,start[0] * scale + dir.x * scale + shore.x * scale,2,start[1] * scale + dir.z * scale + shore.z * scale,0,0,rot,params,Math.random() < chance));\r\n    }\r\n\r\n    return agents;\r\n  }\r\n  \r\n  getViewpoints() {\r\n    const scale = this.scale;\r\n\r\n    const vp = [];\r\n    vp.push({name:\"Grid\", position:[0,0,15]});\r\n    vp.push({name:\"Pot Luck Camp\", position:[1.75 * scale,15 / scale,2.6 * scale], lookat: [1.5 * scale,2 / scale,2.25 * scale]});\r\n    vp.push({name:\"Far\", position:[70,2,300]});\r\n    vp.push({name:\"Float End\", position:[70,2,280]});\r\n\r\n    return vp;\r\n  }\r\n}\r\n\r\nexport default CanyonCreekWorld;","import Geometry from \"./Geometry\";\r\nimport World from \"./World\";\r\n\r\n// Grid of size x size\r\nclass GridWorld extends World {\r\n  constructor(size) {\r\n    super();\r\n\r\n    this.size = size;\r\n  }\r\n\r\n  getCameraStart() {\r\n    return this.size;\r\n  }\r\n  \r\n  getLandscape(THREE) {\r\n    return new THREE.Group();\r\n  }\r\n}\r\n\r\nexport default GridWorld;","import React, { Component, memo } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls, MapControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { FlyControls } from \"three/examples/jsm/controls/FlyControls\";\nimport { World } from \"./World\"\nimport { ConwayAgent,ConwayControl } from \"./ConwayAgent\"\nimport SimControl from \"./SimControl\"\nimport CameraControl from \"./CameraControl\"\nimport WorldControl from \"./WorldControl\"\nimport Geometry from \"./Geometry\";\nimport CanyonCreekWorld from \"./CanyonCreekWorld\";\nimport GridWorld from \"./GridWorld\";\n\nconst style = {\n  height: 512,\n  maxWidth: 1060\n};\n\nlet delta = 0;\nlet clock = new THREE.Clock();\nlet interval = 1 / 33;\n\nconst transmissionDelayMax = 0;  // ms max\n\nclass App extends Component {\n  state = {}\n  debugNetwork = false;\n  debugNeighbors = false;\n  showNeighborsFor = -1;\n  messages = [];\n  simPaused = true;\n  pauseTime = Number.MAX_SAFE_INTEGER;\n  time = 0;  // Simulation time\n  viewpoints = [];\n  lastLoopTime = new Date().getTime();\n  world = null;\n  navMode = \"Orbit\";\n\n  agentParams = {startPattern:\"pulsar\", size: 10,\n    cycleTime: 400,\n    stateSendTime: 50,\n    spontaneousGeneration: 0.01,\n    resurrectionChance: 0.5};\n\n  worldParams = {layout:\"grid\"};\n\n  componentDidMount() {\n    this.sceneSetup();\n    this.worldSetup();\n    this.agentSetup(this.agentParams);\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n    window.addEventListener(\"resize\", this.handleWindowResize);\n\n    this.setState({time:0,viewpoints:this.viewpoints});\n\n\n    if (typeof this.viewpoints[0] !== \"undefined\") {\n      this.handleChangeViewpoint(this.viewpoints[0]);\n    }\n\n    // Render once so we see the initial pattern\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    this.controls.dispose();\n  }\n\n  // Setup the agents\n  agentSetup = (params) => {\n    let id = 0;\n\n    let random = false;\n    let chance = 0.4;\n    let quadpole = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,1,1,0,0,0,0,0,0,0],\n      [0,1,0,1,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,1,0,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,1,0,1,0,0],\n      [0,0,0,0,0,0,1,1,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let blank = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let corners = [\n      [1,1,0,0,0,0,0,0,1,1],\n      [1,0,0,0,0,0,0,0,0,1],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [1,0,0,0,0,0,0,0,0,1],\n      [1,1,0,0,0,0,0,0,1,1],\n    ];\n    let cool1 = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,0,0,0,0],\n      [0,0,0,1,1,1,1,0,0,0],\n      [0,0,0,0,1,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let toad = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0,0],\n      [0,0,0,1,1,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let blinker = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,1,0,0,0,0],\n      [0,0,0,0,0,1,0,0,0,0],\n      [0,0,0,0,0,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let beacon = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,1,1,0,0,0,0,0],\n      [0,0,0,1,1,0,0,0,0,0],\n      [0,0,0,0,0,1,1,0,0,0],\n      [0,0,0,0,0,1,1,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let pulsar = [\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    let test = [\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,1,1,0,0,0,0,0],\n      [0,0,0,1,1,0,0,0,0,0],\n      [0,0,0,0,0,1,1,0,0,0],\n      [0,0,0,0,0,1,1,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n      [0,0,0,0,0,0,0,0,0,0],\n    ];\n\n    if (params.startPattern === \"critical\") {\n      console.log(\"Critical agents\");\n      this.agents = this.world.getAgents(THREE,\"critical\",params,this);\n      return;\n    }\n    let pattern;\n\n    if (params.startPattern === \"random\") {\n      random = true;\n    } else {\n      switch(params.startPattern) {\n        case \"quadpole\":\n          pattern = quadpole;\n          break;\n        case \"blank\":\n          pattern = blank;\n          break;\n        case \"test\":\n          pattern = test;\n          break;\n        case \"corners\":\n          pattern = corners;\n          break;\n        case \"toad\":\n          pattern = toad;\n          break;\n        case \"beacon\":\n          pattern = beacon;\n          break;\n        case \"blinker\":\n          pattern = blinker;\n          break;\n        case \"pulsar\":\n          pattern = pulsar;\n          break;\n        default:\n          console.log(\"Unknown pattern\");\n          pattern = test;\n          break;\n      }\n    }\n\n    let size = params.size;\n    if (!random && size < pattern.length) {\n      size = pattern.length;\n    }\n\n    this.agents = [];\n\n    for(let y=0; y < size; y++) {\n      for(let x=0; x < size; x++) {\n        let alive = true;\n\n        let px = x;\n        let py = y;\n\n        if (random) {\n          alive = Math.random() < chance;\n        } else {\n          px = x;\n          py = size - y - 1;\n\n          alive = pattern[y][x] === 1;\n        }\n\n        const agent = new ConwayAgent(THREE,this,id++,this.world,0.1,px-size/2,py-size/2,0,Math.PI/2,0,0,params,alive);\n        //console.log(\"agent: \" + (id-1) + \" id: \" + (y * size + x) + \" x: \" + x + \" y: \" + y + \" alive: \" + alive);\n        this.agents[y * size + x] = agent;\n      }\n    }\n  };\n\n  worldSetup() {\n    switch(this.worldParams.layout) {\n      case \"grid\":\n        this.world = new GridWorld(this.agentParams.size);\n        break;\n      case \"critical\":\n        this.world = new CanyonCreekWorld();\n        break;\n    }\n  }\n\n  // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n  // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n  sceneSetup = () => {\n    // get container dimensions and use them for scene sizing\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      75, // fov = field of view\n      width / height, // aspect ratio\n      0.1, // near plane\n      1000.0 // far plane\n    );\n    this.camera.position.z = 10;\n\n    switch(this.navMode) {\n      case \"Orbit\":\n        this.controls = new OrbitControls(this.camera, this.el);\n        this.controls.panSpeed = 0.2;\n        this.controls.rotateSpeed = 0.2;\n        this.controls.zoomSpeed = 0.02;\n        break;\n      case \"Fly\":\n        this.controls = new FlyControls(this.camera, this.el);\n        break;\n      case \"Map\":\n        this.controls = new MapControls(this.camera,this.el);\n        this.controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        this.controls.dampingFactor = 0.05;\n        this.controls.screenSpacePanning = false;\n        this.controls.minDistance = 50;\n        this.controls.maxDistance = 700;\n        this.controls.maxPolarAngle = Math.PI / 2;\n      default:\n        console.log(\"Unknown controls\");\n    }\n\n    this.renderer = new THREE.WebGLRenderer({antialias:true});\n    this.renderer.setSize(width, height);\n    this.el.appendChild(this.renderer.domElement); // mount using React ref\n\n  };\n\n  // Here should come custom code.\n  // Code below is taken from Three.js BoxGeometry example\n  // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n  addCustomSceneObjects = () => {\n    for(let n=0; n < this.agents.length; n++) {\n      this.scene.add(this.agents[n].getMesh());\n    }\n\n    this.scene.add(this.world.getLandscape(THREE));\n    this.camera.position.z = this.world.getCameraStart();\n    this.viewpoints = this.world.getViewpoints();\n\n\n    this.calcAgentNeighbors(8);\n\n    const lights = [];\n    lights[0] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n\n    lights[0].position.set(0, 200, 0);\n    lights[1].position.set(100, 200, 100);\n    lights[2].position.set(-100, -200, -100);\n\n    //this.scene.add(lights[0]);\n    //this.scene.add(lights[1]);\n    //this.scene.add(lights[2]);\n  };\n\n  // Calculate agent neighbors based on distance.\n  calcAgentNeighbors(max) {\n    if (this.debugNeighbors) console.log(\"Calculating neighbors\");\n\n    for(let agentIdx=0; agentIdx < this.agents.length; agentIdx++) {\n      if (this.debugNeighbors) console.log(\"Agent: \" + agentIdx);\n      let distances = [];\n\n      let agent = this.agents[agentIdx];\n      let pos = agent.getPosition();\n\n      for (let i = 0; i < this.agents.length; i++) {\n        if (i !== agentIdx) {\n          let dist = this.agents[i].getPosition().distanceToSquared(pos);\n          distances.push({dist: dist, agentIdx: i});\n        }\n      }\n\n      distances.sort(function (a, b) {\n        return a.dist - b.dist;\n      });\n      if (this.debugNeighbors) console.log(JSON.stringify(distances));\n\n      //console.log(distances);\n      let neighbors = [];\n      let len = Math.min(max,distances.length);\n\n      for(let i=0; i < len; i++) {\n        neighbors[i] = distances[i].agentIdx;\n      }\n\n      if (this.debugNeighbors) console.log(JSON.stringify(neighbors));\n      this.agents[agentIdx].setNeighbors(neighbors);\n    }\n\n    if (this.showNeighborsFor !== -1) {\n      let neighbors = this.agents[this.showNeighborsFor].getNeighbors();\n      for(let i=0; i < neighbors.length; i++) {\n        this.agents[neighbors[i]].setMarked(true);\n      }\n    }\n  }\n\n  startAnimationLoop = () => {\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n\n    let now = new Date().getTime();\n\n    if (!this.simPaused) {\n      // Handle delivery of messages\n      this.time += now - this.lastLoopTime;\n      this.setState({time:this.time,viewpoints:this.viewpoints});\n\n      let remove = [];\n      for (let i = 0; i < this.messages.length; i++) {\n        if (this.messages[i].time < this.time) {\n          if (this.debugNetwork) console.log(\"Routing message: \" + JSON.stringify(this.messages[i]));\n          if (typeof this.messages[i].to === 'undefined') {\n            console.log(\"Invalid message: \" + JSON.stringify(this.messages[i]))\n          } else {\n            this.agents[this.messages[i].to].receiveMessage(this.messages[i]);\n          }\n          remove.push(i);\n        }\n      }\n\n      for (let i = 0; i < remove.length; i++) {\n        this.messages.splice(remove[i] - i, 1);\n      }\n\n      // Handle clocking of agents\n      // TODO: Likely we should randomally walk for better simulation of real world parallelism\n      for (let i = 0; i < this.agents.length; i++) {\n        this.agents[i].loop(this.time);\n      }\n\n      //this.sleep(50);  // TODO: Remove this after debugging\n      if (this.time > this.pauseTime) {\n        this.simPaused = true;\n        this.renderer.render(this.scene, this.camera);\n        this.pauseTime = Number.MAX_SAFE_INTEGER;\n        return;\n      }\n    }\n\n    this.lastLoopTime = now;\n    delta += clock.getDelta();\n    if (delta < interval) {\n      return;\n    }\n\n    this.controls.update();\n    this.renderer.render(this.scene, this.camera);\n    delta = delta % interval;\n  };\n\n  sleep(milliseconds) {\n    const date = Date.now();\n    let currentDate = null;\n    do {\n      currentDate = Date.now();\n    } while (currentDate - date < milliseconds);\n  }\n\n  handleWindowResize = () => {\n    const width = this.el.clientWidth;\n    const height = this.el.clientHeight;\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n\n    // Note that after making changes to most of camera properties you have to call\n    // .updateProjectionMatrix for the changes to take effect.\n    this.camera.updateProjectionMatrix();\n  };\n\n  sendMessage(from,to,msg) {\n    if (this.debugNetwork) {\n      console.log(\"Send message. from: \" + from + \" to: \" + to + \" msg: \" + JSON.stringify(msg));\n    }\n\n    if (typeof from === \"undefined\") {\n      throw new Error(\"From is required\");\n    }\n    if (typeof to === \"undefined\") {\n      throw new Error(\"To is required\");\n    }\n\n    this.messages.push({from:from,to:to,msg:msg,time: this.time + Math.random() * transmissionDelayMax});\n  }\n\n  handleSimPause() {\n    this.simPaused = true;\n  }\n\n  handleSimPlay() {\n    this.simPaused = false;\n    this.lastLoopTime = new Date().getTime();\n  }\n\n  // Play the sim for one cycle time\n  handleSimStep() {\n    this.simPaused = false;\n    this.lastLoopTime = new Date().getTime();\n    this.pauseTime = this.time + this.agentParams.cycleTime;\n  }\n\n  handleSimReset() {\n    this.simPaused = true;\n    this.time = 0;\n    this.setState({time:this.time,viewpoints:this.viewpoints});\n    this.lastLoopTime = new Date().getTime();\n    this.messages = [];\n\n    while(this.scene.children.length > 0){\n      this.scene.remove(this.scene.children[0]);\n    }\n\n/*\n    this.worldSetup();\n    this.addCustomSceneObjects();\n    this.agentSetup(this.agentParams);\n\n    this.handleChangeViewpoint(this.viewpoints[0]);\n*/\n    this.worldSetup();\n    this.agentSetup(this.agentParams);\n    this.addCustomSceneObjects();\n\n    if (typeof this.viewpoints[0] !== \"undefined\") {\n      this.handleChangeViewpoint(this.viewpoints[0]);\n    }\n\n  }\n\n  handleCameraReset() {\n    this.controls.reset();\n  }\n\n  handleAgentParamsChanged(params) {\n    console.log(\"Params changed: \" + JSON.stringify(params));\n\n    this.agentParams = {...this.agentParams,...params};\n\n    this.handleSimReset();\n  }\n\n  handleWorldParamsChanged(params) {\n    console.log(\"World Params changed: \" + JSON.stringify(params));\n\n    this.worldParams = {...this.worldParams,...params};\n\n    this.handleSimReset();\n  }\n\n  markNeighbors(agentIdx) {\n    // clear old\n    for(let i=0; i < this.agents.length; i++) {\n      this.agents[i].setMarked(false);\n    }\n\n    let neighbors = this.agents[agentIdx].getNeighbors();\n    for(let i=0; i < neighbors.length; i++) {\n      this.agents[neighbors[i]].setMarked(!this.agents[neighbors[i]].getMarked());\n    }\n  }\n\n  showAliveCount(agentIdx) {\n    console.log(\"Agent: \" + agentIdx);\n    const neighbors = this.agents[agentIdx].getNeighbors();\n    let aliveCount = 0;\n    for(let i=0; i < neighbors.length; i++) {\n      console.log(\"neighbor: \" + neighbors[i] + \" alive: \" + this.agents[neighbors[i]].isAlive());\n      if (this.agents[neighbors[i]].isAlive()) {\n        aliveCount++;\n      }\n    }\n    console.log(\"aliveCount: \" + aliveCount);\n\n  }\n\n  handleKeyPressed(e) {\n    let row = 9;\n    let size = 10;\n\n    switch(e.key) {\n      case '0':\n        this.markNeighbors(row * size + 0);\n        this.showAliveCount(row * size + 0);\n        break;\n      case '1':\n        this.markNeighbors(row * size + 1);\n        this.showAliveCount(row * size + 1);\n        break;\n      case '2':\n        this.markNeighbors(row * size + 2);\n        this.showAliveCount(row * size + 2);\n        break;\n      case '3':\n        this.markNeighbors(row * size + 3);\n        this.showAliveCount(row * size + 3);\n        break;\n      case '4':\n        this.markNeighbors(row * size + 4);\n        this.showAliveCount(row * size + 4);\n        break;\n      case '5':\n        this.markNeighbors(row * size + 5);\n        this.showAliveCount(row * size + 5);\n        break;\n      case '6':\n        this.markNeighbors(row * size + 6);\n        this.showAliveCount(row * size + 6);\n        break;\n      case '7':\n        this.markNeighbors(row * size + 7);\n        this.showAliveCount(row * size + 7);\n        break;\n      case '8':\n        this.markNeighbors(row * size + 8);\n        this.showAliveCount(row * size + 8);\n        break;\n      case '9':\n        this.markNeighbors(row * size + 9);\n        this.showAliveCount(row * size + 9);\n        break;\n      case 's':\n        this.handleSimStep();\n        break;\n      case 'c':\n        for(let i=0; i < this.agents.length; i++) {\n          this.agents[i].setMarked(false);\n        }\n        break;\n      default:\n        // ignore\n        break;\n    }\n  }\n\n  handleChangeViewpoint(vp) {\n    console.log(\"new vp: \" + vp.position + \" lookat: \" + vp.lookat);\n    this.camera.position.x = vp.position[0];\n    this.camera.position.y = vp.position[1];\n    this.camera.position.z = vp.position[2];\n    if (typeof vp.lookat !== 'undefined') {\n      this.camera.lookAt(vp.lookat[0],vp.lookat[1],vp.lookat[2]);\n    }\n  }\n\n  handleChangeNavMode(mode) {\n\n  }\n\n  render() {\n    return <div>\n      <div style={style} ref={ref => (this.el = ref)} onKeyPress = {e => this.handleKeyPressed(e) } autoFocus />\n      <div style={{\n        display:\"flex\"\n      }} >\n        <div>\n          <SimControl time = {this.state.time} resetAction={e => this.handleSimReset()} pauseAction={e => this.handleSimPause() } playAction={e => this.handleSimPlay() } stepAction={e => this.handleSimStep() }/>\n          <CameraControl viewpoints={this.viewpoints} changeNavModeAction={e => this.handleChangeNavMode(e) } resetAction={e => this.handleCameraReset()} changeViewpointAction={e => this.handleChangeViewpoint(e)}/>\n          <WorldControl {...this.worldParams}  paramsChangedAction = {(param,val) => this.handleWorldParamsChanged(param,val) } />\n        </div>\n        <ConwayControl {...this.agentParams} paramsChangedAction = {(param,val) => this.handleAgentParamsChanged(param,val) } />\n      </div>\n    </div>\n  }\n}\n\nexport default memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}